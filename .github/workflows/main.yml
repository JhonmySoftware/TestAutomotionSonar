name: Build

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube:9.9-community  # Versión específica de SonarQube
        ports:
          - 9000:9000

    steps:
      - name: Check out the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Esperar SonarQube
        run: |
          until curl -s http://localhost:9000/api/system/status | grep -q '"status":"UP"'; do
            echo "Esperando que SonarQube esté listo..."
            sleep 5
          done

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Token de autenticación para SonarQube
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=JhonmySoftware_TestAutomotionSonar_22e9b4a7-87b4-47ea-882f-45a187ffdc27 \
            -Dsonar.projectName='TestAutomotionSonar' \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=admin \
            -Dsonar.password=admin
